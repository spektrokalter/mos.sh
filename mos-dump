#!/bin/bash

set -o errexit -o nounset -o pipefail

mos_root_dir="$(dirname -- "$(realpath -- "${BASH_SOURCE[0]}")")"
source -- "$mos_root_dir/lib"
source -- "$mos_root_dir/default.conf"

#
# read mos.sh configuration
#

if conf="$HOME/.mos.sh.conf"; [[ -f "$conf" && -r "$conf" ]]; then
	source -- "$conf"
fi

#
# parse command-line arguments
#

if (( $# < 1 )); then
	die "usage: $0 config [mariadb_dump_options] [--] [table_names]"
fi

CONFIG="$HOME/.mos.sh.d/$1"
shift

#
# validate & read the connection configuration
#

if [[ ! -f "$CONFIG" || ! -r "$CONFIG" ]]; then
	die "bad config: $CONFIG"
fi

source -- "$CONFIG"

#
# build mariadb-dump command
#

cmd=("${MARIADB_DUMP[@]}")

if [[ -v SSH_HOST ]]; then
	cmd+=(
		-hlocalhost
		"-P$LOCAL_PORT"
	)
else
	cmd+=(
		"-h$REMOTE_HOST"
		"-P$REMOTE_PORT"
	)
fi

cmd+=(
	"-u$REMOTE_USER"
	"-p$REMOTE_PASS"
	"${MARIADB_DUMP_OPTS[@]}"
)

tables=()

for arg in "$@"; do
	if [[ "$arg" == '--' ]]; then
		shift
		for arg in "$@"; do
			tables+=("$arg")
		done
		break
	fi

	if [[ "$arg" =~ ^- ]]; then
		cmd+=("$arg")
		shift
	else
		tables+=("$arg")
		shift
	fi
done

cmd+=(-- "$REMOTE_DB" "${tables[@]}")

#
# run ssh & mariadb-dump
#

if [[ -v SSH_HOST ]]; then
	sd_user_ssh_L "$CONFIG"
fi

exec -- "${cmd[@]}"
